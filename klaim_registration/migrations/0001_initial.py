# Generated by Django 3.2.8 on 2021-10-15 09:49

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApprovalHRD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('DALAM PEMERIKSAAN', 'DALAM PEMERIKSAAN'), ('DISETUJUI', 'DISETUJUI'), ('DITOLAK', 'DITOLAK')], default='DALAM PEMERIKSAAN', max_length=20)),
                ('keterangan', models.TextField(blank=True, null=True)),
                ('hrd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.profile')),
            ],
        ),
        migrations.CreateModel(
            name='DataTK',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nama', models.CharField(max_length=200)),
                ('nik', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator('^\\d{16}$', 'Format NIK Tidak Sesuai')])),
                ('tgl_lahir', models.DateField()),
                ('tempat_lahir', models.CharField(max_length=200)),
                ('alamat', models.CharField(max_length=250)),
                ('nama_ibu', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('BELUM MENIKAH', 'BELUM MENIKAH'), ('MENIKAH', 'MENIKAH')], default='BELUM MENIKAH', max_length=13)),
                ('nama_pasangan', models.CharField(blank=True, max_length=100, null=True)),
                ('tgl_lahir_pasangan', models.DateField(blank=True, null=True)),
                ('nama_anak_s', models.CharField(blank=True, max_length=100, null=True)),
                ('tgl_lahir_s', models.DateField(blank=True, null=True)),
                ('nama_anak_d', models.CharField(blank=True, max_length=100, null=True)),
                ('tgl_lahir_d', models.DateField(blank=True, null=True)),
                ('no_hp', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^(08+[1-9])([0-9]{7,9})$', 'Format NO HP TIDAK SESUA!!!')])),
                ('email', models.EmailField(blank=True, max_length=200, null=True)),
                ('nama_rekening', models.CharField(max_length=100)),
                ('no_rekening', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator('^\\d{6,}$', 'No Rekening Harus Berupa Angka')])),
                ('propic', models.ImageField(blank=True, null=True, upload_to='profile/tk/')),
                ('file_kk', models.FileField(blank=True, null=True, upload_to='kk/', validators=[django.core.validators.RegexValidator('.*\\.(jpg|JPG|JPEG|pdf|PDF)', 'Only Support PDF dan JPG')])),
                ('file_ktp', models.FileField(blank=True, null=True, upload_to='ktp/', validators=[django.core.validators.RegexValidator('.*\\.(jpg|JPG|JPEG|pdf|PDF)', 'Only Support PDF dan JPG')])),
                ('file_buku_nikah', models.FileField(upload_to='buku-nikah/', validators=[django.core.validators.RegexValidator('.*\\.(jpg|JPG|JPEG|pdf|PDF)', 'Only Support PDF dan JPG')])),
                ('created_on', models.DateField(auto_now_add=True)),
                ('hrd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.profile')),
            ],
            options={
                'verbose_name': 'DATA TK',
                'verbose_name_plural': 'LIST DATA TK',
            },
        ),
        migrations.CreateModel(
            name='TipeKlaim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kode', models.CharField(max_length=5)),
                ('tipe_klaim', models.CharField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='toQRCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_uuid', models.UUIDField(default=uuid.UUID('c138843d-15c2-420f-aa74-eea16607255e'), editable=False)),
                ('img_svg', models.ImageField(upload_to='qrcode/')),
                ('tk_klaim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='klaim_registration.approvalhrd')),
            ],
        ),
        migrations.CreateModel(
            name='SebabKlaim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kode', models.CharField(max_length=5)),
                ('sebab_klaim', models.CharField(max_length=200)),
                ('keyword', models.CharField(max_length=3)),
                ('tipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='klaim_registration.tipeklaim')),
            ],
        ),
        migrations.CreateModel(
            name='KPJ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_kpj', models.CharField(max_length=11)),
                ('tgl_keps', models.DateField()),
                ('tgl_na', models.DateField()),
                ('is_aktif', models.BooleanField(default=True)),
                ('data_tk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='klaim_registration.datatk')),
            ],
        ),
        migrations.CreateModel(
            name='DataKlaim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parklaring', models.FileField(blank=True, null=True, upload_to='jhtjp/parklaring/', validators=[django.core.validators.RegexValidator('.*\\.(jpg|JPG|JPEG|pdf|PDF)', 'Only Support PDF dan JPG')])),
                ('surat_meinggal', models.FileField(blank=True, null=True, upload_to='jkm/surat_meinggal/', validators=[django.core.validators.RegexValidator('.*\\.(jpg|JPG|JPEG|pdf|PDF)', 'Only Support PDF dan JPG')])),
                ('ktp_ahli_waris', models.FileField(blank=True, null=True, upload_to='jkm/ktp_ahliwaris/', validators=[django.core.validators.RegexValidator('.*\\.(jpg|JPG|JPEG|pdf|PDF)', 'Only Support PDF dan JPG')])),
                ('kk_baru', models.FileField(blank=True, null=True, upload_to='jkm/kk_baru/', validators=[django.core.validators.RegexValidator('.*\\.(jpg|JPG|JPEG|pdf|PDF)', 'Only Support PDF dan JPG')])),
                ('no_rek_waris', models.FileField(blank=True, null=True, upload_to='jkm/no_rek_ahli_waris/', validators=[django.core.validators.RegexValidator('.*\\.(jpg|JPG|JPEG|pdf|PDF)', 'Only Support PDF dan JPG')])),
                ('form_I', models.FileField(blank=True, null=True, upload_to='jkk/tahap_I/form/', validators=[django.core.validators.RegexValidator('.*\\.(jpg|JPG|JPEG|pdf|PDF)', 'Only Support PDF dan JPG')])),
                ('kronologis', models.FileField(blank=True, null=True, upload_to='jkk/tahap_I/kronologis/', validators=[django.core.validators.RegexValidator('.*\\.(jpg|JPG|JPEG|pdf|PDF)', 'Only Support PDF dan JPG')])),
                ('ktp_saksi', models.FileField(blank=True, null=True, upload_to='jkk/tahap_I/ktp_saksi/', validators=[django.core.validators.RegexValidator('.*\\.(jpg|JPG|JPEG|pdf|PDF)', 'Only Support PDF dan JPG')])),
                ('absen_1', models.FileField(blank=True, null=True, upload_to='jkk/tahap_I/absen_1/', validators=[django.core.validators.RegexValidator('.*\\.(jpg|JPG|JPEG|pdf|PDF)', 'Only Support PDF dan JPG')])),
                ('surat_pernyataan', models.FileField(blank=True, null=True, upload_to='jkk/tahap_I/surat_pernyataan/', validators=[django.core.validators.RegexValidator('.*\\.(jpg|JPG|JPEG|pdf|PDF)', 'Only Support PDF dan JPG')])),
                ('form_II', models.FileField(blank=True, null=True, upload_to='jkk/tahap_II/form/', validators=[django.core.validators.RegexValidator('.*\\.(jpg|JPG|JPEG|pdf|PDF)', 'Only Support PDF dan JPG')])),
                ('absensi_2', models.FileField(blank=True, null=True, upload_to='jkk/tahap_II/absensi_2/', validators=[django.core.validators.RegexValidator('.*\\.(jpg|JPG|JPEG|pdf|PDF)', 'Only Support PDF dan JPG')])),
                ('no_rek_perusahaan', models.FileField(blank=True, null=True, upload_to='jkk/tahap_II/no_rek_pers/', validators=[django.core.validators.RegexValidator('.*\\.(jpg|JPG|JPEG|pdf|PDF)', 'Only Support PDF dan JPG')])),
                ('no_rek_tk', models.FileField(blank=True, null=True, upload_to='jkk/tahap_II/no_rek_tk', validators=[django.core.validators.RegexValidator('.*\\.(jpg|JPG|JPEG|pdf|PDF)', 'Only Support PDF dan JPG')])),
                ('slip_gaji', models.FileField(blank=True, null=True, upload_to='jkk/tahap_II/slip/', validators=[django.core.validators.RegexValidator('.*\\.(jpg|JPG|JPEG|pdf|PDF)', 'Only Support PDF dan JPG')])),
                ('no_kpj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='klaim_registration.kpj')),
                ('sebab_klaim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='klaim_registration.sebabklaim')),
                ('tipe_klaim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='klaim_registration.tipeklaim')),
            ],
        ),
        migrations.AddField(
            model_name='approvalhrd',
            name='klaim',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='klaim_registration.dataklaim'),
        ),
    ]
